{"ast":null,"code":"var _jsxFileName = \"/Users/brandonlanier/Desktop/Workspace/week16/dotnet-pet-hotel-assignment/ClientApp/src/components/PetOwnersTable.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass PetOwnersTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: [],\n      successMessage: null,\n      loading: true,\n      newPetOwner: {\n        name: '',\n        emailAddress: ''\n      }\n    };\n\n    this.componentDidMount = async () => {\n      await this.props.fetchPetOwners();\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.renderMessages = () => {\n      /*\n         Look into the local state to see if we have any errors\n         that are derived from the backend validation, and display them\n      */\n      const errors = [];\n\n      if (this.state.errors) {\n        for (let err in this.state.errors) {\n          errors.push( /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }\n          }, this.state.errors[err]));\n        }\n      }\n\n      if (errors.length > 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: 'alert alert-danger',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, \"The following errors prevented a successful save:\"), /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }\n        }, errors));\n      }\n\n      if (this.state.successMessage !== null) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: 'alert alert-success',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }\n        }, this.state.successMessage);\n      }\n\n      return null;\n    };\n\n    this.renderTable = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped table-bordered table-hover\",\n        \"aria-labelledby\": \"tabelLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, \"Owner Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, \"Pets\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, this.props.petOwners.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 63\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"6\",\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 67\n        }\n      }, \"There are no registered pet owners.\")), this.props.petOwners.map(petOwner => /*#__PURE__*/React.createElement(\"tr\", {\n        key: `petOwner-row-${petOwner.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, petOwner.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, petOwner.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, petOwner.emailAddress), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, petOwner.petCount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deletePetOwner(petOwner.id),\n        className: \"btn btn-sm btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, \"Delete\")))))));\n    };\n\n    this.deletePetOwner = async id => {\n      await axios.delete(`api/petOwners/${id}`);\n      this.props.fetchPetOwners();\n      this.setState({\n        errors: [],\n        successMessage: 'Deleted petOwner successfully'\n      });\n    };\n\n    this.submitPetOwner = async () => {\n      try {\n        await axios.post('api/petOwners', this.state.newPetOwner);\n        this.setState({\n          newPetOwner: { ...this.state.newPetOwner,\n            name: ''\n          }\n        });\n        this.props.fetchPetOwners();\n        this.setState({\n          errors: [],\n          successMessage: 'Successfully added pet Owner'\n        });\n      } catch (err) {\n        if (err.response.status === 400) {\n          // validation errors\n          this.setState({\n            errors: err.response.data.errors,\n            successMessage: null\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 18\n      }\n    }, \"Loading...\")) : this.renderTable();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"tableLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Pet Owners\"), this.renderMessages(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row ml-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Pet Owner Name\",\n      value: this.state.newPetOwner.name,\n      onChange: event => this.setState({\n        newPetOwner: { ...this.state.newPetOwner,\n          name: event.target.value\n        }\n      }),\n      className: 'form-control col-md-3 mr-2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Email Address\",\n      value: this.state.newPetOwner.emailAddress,\n      onChange: event => this.setState({\n        newPetOwner: { ...this.state.newPetOwner,\n          emailAddress: event.target.value\n        }\n      }),\n      className: 'form-control col-md-3 mr-2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submitPetOwner,\n      className: 'btn btn-primary col-md-2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Add Pet Owner\")), contents);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  petOwners: state.petOwners\n});\n\nexport default connect(mapStateToProps)(PetOwnersTable);","map":{"version":3,"sources":["/Users/brandonlanier/Desktop/Workspace/week16/dotnet-pet-hotel-assignment/ClientApp/src/components/PetOwnersTable.js"],"names":["React","Component","axios","connect","PetOwnersTable","state","errors","successMessage","loading","newPetOwner","name","emailAddress","componentDidMount","props","fetchPetOwners","setState","renderMessages","err","push","length","renderTable","petOwners","textAlign","map","petOwner","id","petCount","deletePetOwner","delete","submitPetOwner","post","response","status","data","render","contents","event","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass PetOwnersTable extends Component {\n    state = {\n        errors: [],\n        successMessage: null,\n        loading: true,\n        newPetOwner: {\n            name: '',\n            emailAddress: '',\n        }\n    }\n\n    componentDidMount = async () => {\n        await this.props.fetchPetOwners();\n        this.setState({ loading: false });\n    }\n\n    renderMessages = () => {\n        /*\n           Look into the local state to see if we have any errors\n           that are derived from the backend validation, and display them\n        */\n        const errors = [];\n        if (this.state.errors) {\n            for (let err in this.state.errors) {\n                errors.push(<li>{this.state.errors[err]}</li>);\n            }\n        }\n\n        if (errors.length > 0) {\n            return (\n                <div className={'alert alert-danger'}>\n                    <p>The following errors prevented a successful save:</p>\n                    <ul>{errors}</ul>\n                </div>);\n        }\n\n        if (this.state.successMessage !== null) {\n            return (\n                <p className={'alert alert-success'}>\n                    {this.state.successMessage}\n                </p>\n            );\n        }\n\n        return null;\n    }\n\n    renderTable = () => {\n        return (\n            <div class=\"table-responsive\">\n                <table className='table table-striped table-bordered table-hover' aria-labelledby=\"tabelLabel\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Owner Name</th>\n                            <th>Email</th>\n                            <th>Pets</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.petOwners.length === 0 && <tr><td colSpan='6' style={{ textAlign: 'center' }}>There are no registered pet owners.</td></tr>}\n                        {this.props.petOwners.map(petOwner =>\n                            <tr key={`petOwner-row-${petOwner.id}`}>\n                                <td>{petOwner.id}</td>\n                                <td>{petOwner.name}</td>\n                                <td>{petOwner.emailAddress}</td>\n                                <td>{petOwner.petCount}</td>\n                                <td><button onClick={() => this.deletePetOwner(petOwner.id)} className='btn btn-sm btn-danger'>Delete</button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    render() {\n        let contents = this.state.loading\n            ? <p><em>Loading...</em></p>\n            : this.renderTable();\n\n        return (\n            <>\n                <h2 id=\"tableLabel\">Pet Owners</h2>\n                {this.renderMessages()}\n                <div className=\"form-group row ml-0\">\n                    <input\n                        placeholder='Pet Owner Name'\n                        value={this.state.newPetOwner.name}\n                        onChange={(event) => this.setState({ newPetOwner: { ...this.state.newPetOwner, name: event.target.value } })}\n                        className={'form-control col-md-3 mr-2'}\n                    />\n                    <input\n                        placeholder='Email Address'\n                        value={this.state.newPetOwner.emailAddress}\n                        onChange={(event) => this.setState({ newPetOwner: { ...this.state.newPetOwner, emailAddress: event.target.value } })}\n                        className={'form-control col-md-3 mr-2'}\n                    />\n                    <button onClick={this.submitPetOwner} className={'btn btn-primary col-md-2'}>Add Pet Owner</button>\n                </div>\n                {contents}\n            </>\n        );\n    }\n\n    deletePetOwner = async (id) => {\n        await axios.delete(`api/petOwners/${id}`)\n        this.props.fetchPetOwners();\n        this.setState({\n            errors: [],\n            successMessage: 'Deleted petOwner successfully'\n        })\n    }\n\n    submitPetOwner = async () => {\n        try {\n            await axios.post('api/petOwners', this.state.newPetOwner);\n            this.setState({ newPetOwner: { ...this.state.newPetOwner, name: '' } });\n            this.props.fetchPetOwners();\n            this.setState({\n                errors: [],\n                successMessage: 'Successfully added pet Owner'\n            });\n        } catch (err) {\n            if (err.response.status === 400) {\n                // validation errors\n                this.setState({ errors: err.response.data.errors, successMessage: null });\n            }\n        }\n    }\n}\n\nconst mapStateToProps = (state) => ({ petOwners: state.petOwners });\nexport default connect(mapStateToProps)(PetOwnersTable);"]},"metadata":{},"sourceType":"module"}
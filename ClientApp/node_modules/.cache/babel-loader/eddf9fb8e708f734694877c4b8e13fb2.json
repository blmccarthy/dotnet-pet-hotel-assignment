{"ast":null,"code":"var _jsxFileName = \"/Users/brandonlanier/Desktop/Workspace/week16/dotnet-pet-hotel-assignment/ClientApp/src/components/PetsTable.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nclass PetsTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      errors: [],\n      successMessage: null,\n      newPet: {\n        name: '',\n        breed: '',\n        color: '',\n        petOwnerid: ''\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.fetchData();\n    };\n\n    this.renderTable = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped table-bordered table-hover\",\n        \"aria-labelledby\": \"tabelLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 22\n        }\n      }, \"Breed\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }\n      }, \"Color\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 22\n        }\n      }, \"Checked In\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }\n      }, \"Pet Owner\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 22\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }\n      }, this.props.pets.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"6\",\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 56\n        }\n      }, \"There are no pets currently in our system.\")), this.props.pets.map(pet => /*#__PURE__*/React.createElement(\"tr\", {\n        key: `pet-row-${pet.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, pet.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, pet.breed), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, pet.color), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, pet.checkedInAt ? moment.utc(pet.checkedInAt).local().calendar() : 'Not Checked In'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, pet.petOwner.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, pet.checkedInAt ? /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.checkOut(pet.id),\n        className: \"btn btn-sm btn-info ml-1 mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }\n      }, \"check out\") : /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.checkIn(pet.id),\n        className: \"btn btn-sm btn-info ml-1 mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, \"check in\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.delete(pet.id),\n        className: \"btn btn-sm btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }\n      }, \"del\")))))));\n    };\n\n    this.addPet = async () => {\n      try {\n        await axios.post('api/pets/', this.state.newPet);\n        this.fetchData();\n        this.setState({\n          errors: [],\n          successMessage: 'Successfully added pet!'\n        });\n      } catch (err) {\n        console.log(err);\n\n        if (err.response.status === 400) {\n          // validation errors\n          this.setState({\n            errors: err.response.data.errors,\n            successMessage: null\n          });\n        }\n      }\n    };\n\n    this.renderMessages = () => {\n      /*\n         Look into the local state to see if we have any errors\n         that are derived from the backend validation, and display them\n      */\n      const errors = [];\n\n      if (this.state.errors) {\n        for (let err in this.state.errors) {\n          // check for special case errors for human readability\n          // .NET throws a weird validation error for database foreign key \n          // violations starting with $. for the field name... weird.\n          if (err === '$.petOwnerId') {\n            errors.push( /*#__PURE__*/React.createElement(\"li\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 28\n              }\n            }, \"Invalid Pet Owner ID\"));\n          } else {\n            errors.push( /*#__PURE__*/React.createElement(\"li\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 28\n              }\n            }, this.state.errors[err]));\n          }\n        }\n      }\n\n      if (errors.length > 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: 'alert alert-danger',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 16\n          }\n        }, \"The following errors prevented a successful save:\"), /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 16\n          }\n        }, errors));\n      }\n\n      if (this.state.successMessage !== null) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: 'alert alert-success',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }\n        }, this.state.successMessage);\n      }\n\n      return null;\n    };\n\n    this.delete = async id => {\n      try {\n        await axios.delete(`api/pets/${id}`);\n        this.fetchData();\n        this.setState({\n          errors: [],\n          successMessage: `Successfully removed pet`\n        });\n      } catch (err) {\n        this.setState({\n          errors: {\n            'error': [err.message]\n          },\n          successMessage: null\n        });\n      }\n    };\n\n    this.checkIn = async id => {\n      try {\n        await axios.put(`api/pets/${id}/checkin`);\n        this.setState({\n          errors: [],\n          successMessage: 'Successfully checked in!'\n        });\n        this.fetchData();\n      } catch (err) {\n        this.setState({\n          errors: {\n            'error': [err.message]\n          },\n          successMessage: null\n        });\n      }\n    };\n\n    this.checkOut = async id => {\n      try {\n        await axios.put(`api/pets/${id}/checkout`);\n        this.setState({\n          errors: [],\n          successMessage: 'Successfully checked out!'\n        });\n        this.fetchData();\n      } catch (err) {\n        this.setState({\n          errors: {\n            'error': [err.message]\n          },\n          successMessage: null\n        });\n      }\n    };\n\n    this.fetchData = async () => {\n      try {\n        const response = await axios.get('api/pets/');\n        this.props.dispatch({\n          type: 'SET_PETS',\n          payload: response.data\n        });\n        this.props.fetchPetOwners(); // stretch goal 1: grab a list of breeds from the backend\n        // stretch goal 2: grab a list of colors from the backend\n\n        this.setState({\n          loading: false\n        });\n      } catch (err) {\n        this.setState({\n          errors: {\n            'error': [err.message]\n          },\n          successMessage: null\n        });\n      }\n    };\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Loading...\")) : this.renderTable();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"tableLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Pets\"), this.renderMessages(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row ml-0 mr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: 'pet name',\n      className: \"form-control col-md-2 mr-2\",\n      value: this.state.newPet.name,\n      onChange: e => this.setState({\n        newPet: { ...this.state.newPet,\n          name: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control col-md-2 mr-2\",\n      value: this.state.newPet.breed,\n      onChange: e => this.setState({\n        newPet: { ...this.state.newPet,\n          breed: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, \"Pet Breed\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Shepherd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"Husky\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Poodle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, \"Aussie\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Beagle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"Dachshund\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Bulldog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, \"Chihuahua\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Terrier\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \"Labrador\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Pitbull\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"Pitbull\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Yorkie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, \"Yorkie\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, \"Samoyed\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \"Brittany\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, \"Labordoodle\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, \"Poodle\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, \"Dalmatian\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, \"Goldendoodle\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, \"RodesianRidgeback\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, \"ShibaInu\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, \"WelshCorgi\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"GoldenRetriever\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Retriever\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"SaintBernard\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control col-md-2 mr-2\",\n      value: this.state.newPet.color,\n      onChange: e => this.setState({\n        newPet: { ...this.state.newPet,\n          color: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, \"Pet Color\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Golden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, \"Golden\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, \"Black\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, \"Grey\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"White\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, \"White\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Brown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Brown\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dualcolor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, \"Dualcolor\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Tricolor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, \"Tricolor\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Mixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"Mixed\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Spotted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, \"Spotted\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control col-md-2 mr-2\",\n      value: this.state.newPet.petOwnerid,\n      onChange: e => this.setState({\n        newPet: { ...this.state.newPet,\n          petOwnerid: Number(e.target.value)\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Pet Owner\"), this.props.petOwners.map(petOwner => /*#__PURE__*/React.createElement(\"option\", {\n      value: petOwner.id,\n      key: `select-petOwner=${petOwner.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 57\n      }\n    }, petOwner.name))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form-control btn btn-primary col-md-2\",\n      onClick: this.addPet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 16\n      }\n    }, \"Add Pet\")), contents);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  pets: state.pets,\n  petOwners: state.petOwners\n});\n\nexport default connect(mapStateToProps)(PetsTable);","map":{"version":3,"sources":["/Users/brandonlanier/Desktop/Workspace/week16/dotnet-pet-hotel-assignment/ClientApp/src/components/PetsTable.js"],"names":["React","Component","axios","connect","moment","PetsTable","state","loading","errors","successMessage","newPet","name","breed","color","petOwnerid","componentDidMount","fetchData","renderTable","props","pets","length","textAlign","map","pet","id","checkedInAt","utc","local","calendar","petOwner","checkOut","checkIn","delete","addPet","post","setState","err","console","log","response","status","data","renderMessages","push","message","put","get","dispatch","type","payload","fetchPetOwners","render","contents","e","target","value","Number","petOwners","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nclass PetsTable extends Component {\n   state = {\n      loading: true,\n      errors: [],\n      successMessage: null,\n      newPet: {\n         name: '',\n         breed: '',\n         color: '',\n         petOwnerid: '',\n      }\n   }\n\n   componentDidMount = () => {\n      this.fetchData();\n   }\n\n   renderTable = () => {\n      return (\n         <div class=\"table-responsive\">\n            <table className='table table-striped table-bordered table-hover' aria-labelledby=\"tabelLabel\">\n               <thead>\n                  <tr>\n                     <th>Name</th>\n                     <th>Breed</th>\n                     <th>Color</th>\n                     <th>Checked In</th>\n                     <th>Pet Owner</th>\n                     <th></th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {this.props.pets.length === 0 && <tr><td colSpan='6' style={{ textAlign: 'center' }}>There are no pets currently in our system.</td></tr>}\n                  {this.props.pets.map(pet =>\n                     <tr key={`pet-row-${pet.id}`}>\n                        <td>{pet.name}</td>\n                        <td>{pet.breed}</td>\n                        <td>{pet.color}</td>\n                        <td>{pet.checkedInAt\n                           ? moment.utc(pet.checkedInAt).local().calendar()\n                           : 'Not Checked In'}\n                        </td>\n                        <td>{pet.petOwner.name}</td>\n                        <td>\n                           {pet.checkedInAt\n                              ? <button onClick={() => this.checkOut(pet.id)} className='btn btn-sm btn-info ml-1 mr-1'>check out</button>\n                              : <button onClick={() => this.checkIn(pet.id)} className='btn btn-sm btn-info ml-1 mr-1'>check in</button>\n                           }\n                           <button onClick={() => this.delete(pet.id)} className='btn btn-sm btn-danger'>del</button>\n                        </td>\n                     </tr>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      );\n   }\n\n   addPet = async () => {\n      try {\n         await axios.post('api/pets/', this.state.newPet);\n         this.fetchData();\n         this.setState({\n            errors: [],\n            successMessage: 'Successfully added pet!'\n         });\n      } catch (err) {\n         console.log(err);\n         if (err.response.status === 400) {\n            // validation errors\n            this.setState({ errors: err.response.data.errors, successMessage: null });\n         }\n      }\n   }\n\n   renderMessages = () => {\n      /*\n         Look into the local state to see if we have any errors\n         that are derived from the backend validation, and display them\n      */\n      const errors = [];\n      if (this.state.errors) {\n         for (let err in this.state.errors) {\n            // check for special case errors for human readability\n            // .NET throws a weird validation error for database foreign key \n            // violations starting with $. for the field name... weird.\n            if (err === '$.petOwnerId') {\n               errors.push(<li>Invalid Pet Owner ID</li>)\n            } else {\n               errors.push(<li>{this.state.errors[err]}</li>);\n            }\n         }\n      }\n\n      if (errors.length > 0) {\n         return (\n            <div className={'alert alert-danger'}>\n               <p>The following errors prevented a successful save:</p>\n               <ul>{errors}</ul>\n            </div>);\n      }\n\n      if (this.state.successMessage !== null) {\n         return (\n            <p className={'alert alert-success'}>\n               {this.state.successMessage}\n            </p>\n         );\n      }\n\n      return null;\n   }\n\n   render() {\n      let contents = this.state.loading\n         ? <p><em>Loading...</em></p>\n         : this.renderTable();\n\n      return (\n         <>\n            <h2 id=\"tableLabel\" >Pets</h2>\n            {this.renderMessages()}\n            <div className=\"form-group row ml-0 mr-0\">\n               <input\n                  placeholder={'pet name'}\n                  className={\"form-control col-md-2 mr-2\"}\n                  value={this.state.newPet.name}\n                  onChange={(e) => this.setState({ newPet: { ...this.state.newPet, name: e.target.value } })}\n               />\n               <select className={\"form-control col-md-2 mr-2\"} value={this.state.newPet.breed} onChange={(e) => this.setState({ newPet: { ...this.state.newPet, breed: e.target.value } })}>\n                  <option value='' disabled selected>Pet Breed</option>\n                  <option value='Shepherd'>Husky</option>\n                  <option value='Poodle'>Aussie</option>\n                  <option value='Beagle'>Dachshund</option>\n                  <option value='Bulldog'>Chihuahua</option>\n                  <option value='Terrier'>Labrador</option>\n                  <option value='Pitbull'>Pitbull</option>\n                  <option value='Yorkie'>Yorkie</option>\n                  <option value='Retriever'>Samoyed</option>\n                  <option value='Retriever'>Brittany</option>\n                  <option value='Retriever'>Labordoodle</option>\n                  <option value='Retriever'>Poodle</option>\n                  <option value='Retriever'>Dalmatian</option>\n                  <option value='Retriever'>Goldendoodle</option>\n                  <option value='Retriever'>RodesianRidgeback</option>\n                  <option value='Retriever'>ShibaInu</option>\n                  <option value='Retriever'>WelshCorgi</option>\n                  <option value='Retriever'>GoldenRetriever</option>\n                  <option value='Retriever'>SaintBernard</option>\n\n               </select>\n               <select className={\"form-control col-md-2 mr-2\"} value={this.state.newPet.color} onChange={(e) => this.setState({ newPet: { ...this.state.newPet, color: e.target.value } })}>\n                  <option value='' disabled selected>Pet Color</option>\n                  <option value='Golden'>Golden</option>\n                  <option value='Black'>Black</option>\n                  <option value='Grey'>Grey</option>\n                  <option value='White'>White</option>\n                  <option value='Brown'>Brown</option>\n                  <option value='Dualcolor'>Dualcolor</option>\n                  <option value='Tricolor'>Tricolor</option>\n                  <option value='Mixed'>Mixed</option>\n                  <option value='Spotted'>Spotted</option>\n               </select>\n               <select className={\"form-control col-md-2 mr-2\"} value={this.state.newPet.petOwnerid} onChange={(e) => this.setState({ newPet: { ...this.state.newPet, petOwnerid: Number(e.target.value) } })}>\n                  <option>Pet Owner</option>\n                  {this.props.petOwners.map(petOwner => <option value={petOwner.id} key={`select-petOwner=${petOwner.id}`}>{petOwner.name}</option>)}\n               </select>\n               <button className={\"form-control btn btn-primary col-md-2\"} onClick={this.addPet}>Add Pet</button>\n            </div>\n            {contents}\n         </>\n      );\n   }\n\n   delete = async (id) => {\n      try {\n         await axios.delete(`api/pets/${id}`);\n         this.fetchData();\n         this.setState({\n            errors: [],\n            successMessage: `Successfully removed pet`\n         });\n      } catch (err) {\n         this.setState({ errors: { 'error': [err.message] }, successMessage: null })\n      }\n   }\n\n   checkIn = async (id) => {\n      try {\n         await axios.put(`api/pets/${id}/checkin`);\n         this.setState({\n            errors: [],\n            successMessage: 'Successfully checked in!'\n         });\n         this.fetchData();\n      } catch (err) {\n         this.setState({ errors: { 'error': [err.message] }, successMessage: null })\n      }\n   }\n\n   checkOut = async (id) => {\n      try {\n         await axios.put(`api/pets/${id}/checkout`);\n         this.setState({\n            errors: [],\n            successMessage: 'Successfully checked out!'\n         });\n         this.fetchData();\n      } catch (err) {\n         this.setState({ errors: { 'error': [err.message] }, successMessage: null })\n      }\n   }\n\n   fetchData = async () => {\n      try {\n         const response = await axios.get('api/pets/');\n         this.props.dispatch({ type: 'SET_PETS', payload: response.data });\n         this.props.fetchPetOwners();\n\n         // stretch goal 1: grab a list of breeds from the backend\n         // stretch goal 2: grab a list of colors from the backend\n\n         this.setState({ loading: false });\n      } catch (err) {\n         this.setState({ errors: { 'error': [err.message] }, successMessage: null })\n      }\n   }\n}\n\nconst mapStateToProps = (state) => ({\n   pets: state.pets,\n   petOwners: state.petOwners,\n});\nexport default connect(mapStateToProps)(PetsTable);"]},"metadata":{},"sourceType":"module"}